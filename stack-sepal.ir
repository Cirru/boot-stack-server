{:definitions {"analyze/collect-files" ["defn" "collect-files" ["collection"] ["let" [["package" [":package" "collection"]] ["namespace-names" ["into" ["hash-set"] ["keys" [":namespaces" "collection"]]]] ["namespace-names'" ["into" ["hash-set"] ["distinct" ["map" ["fn" ["definition-name"] ["first" ["string/split" "definition-name" ["re-pattern" "|/"]]]] ["keys" [":definitions" "collection"]]]]]]] ["if" ["nil?" "package"] ["throw" ["Exception." "|`:package` not defined!"]]] ["if" ["=" "namespace-names" "namespace-names'"] ["doall" ["->>" "namespace-names" ["map" ["fn" ["ns-name"] ["[]" ["ns->path" ["str" "package" "|." "ns-name"]] ["generate-file" "ns-name" ["get-in" "collection" ["[]" ":namespaces" "ns-name"]] ["->>" [":definitions" "collection"] ["filter" ["fn" ["entry"] ["string/starts-with?" ["key" "entry"] ["str" "ns-name" "|/"]]]] ["into" ["{}"]]] ["or" ["get-in" "collection" ["[]" ":procedures" "ns-name"]] ["[]"]]]]]] ["into" ["{}"]]]] ["do" ["println" ["style" "|Error: namespaces not match!" ":red"]] ["println" "|    from definitions:" ["pr-str" "namespace-names"]] ["println" "|    from namespaces: " ["pr-str" "namespace-names'"]] ["{}"]]]]], "analyze/depends-on?" ["defn" "depends-on?" ["x" "y" "dict" "level"] ["if" ["contains?" "dict" "x"] ["let" [["deps" [":tokens" ["get" "dict" "x"]]]] ["if" ["contains?" "deps" "y"] "true" ["if" [">" "level" "4"] "false" ["some" ["fn" ["child"] ["depends-on?" "child" "y" "dict" ["inc" "level"]]] "deps"]]]] "false"]], "core/make-header" ["defn" "make-header" ["request"] ["{}" ["|Content-Type" "|text/edn; charset=UTF-8"] ["|Access-Control-Allow-Methods" "|GET, POST, PATCH, OPTIONS"] ["|Access-Control-Allow-Origin" ["get-in" "request" ["[]" ":headers" "|origin"]]]]], "analyze/ns->path" ["defn" "ns->path" ["namespace-name"] ["->" "namespace-name" ["string/replace" ["re-pattern" "|\\."] "|/"] ["string/replace" ["re-pattern" "|-"] "|_"]]], "analyze/deps-insert" ["defn" "deps-insert" ["acc" "new-item" "items" "deps-info"] ["if" ["empty?" "items"] ["conj" "acc" "new-item"] ["let" [["cursor" ["first" "items"]]] ["if" ["depends-on?" "cursor" "new-item" "deps-info" "0"] ["if" ["depends-on?" "new-item" "cursor" "deps-info" "0"] ["if" ["contains?" "def-names" [":kind" ["get" "deps-info" "new-item"]]] ["recur" ["conj" "acc" "cursor"] "new-item" ["rest" "items"] "deps-info"] ["into" ["[]"] ["concat" "acc" ["[]" "new-item"] "items"]]] ["into" ["[]"] ["concat" "acc" ["[]" "new-item"] "items"]]] ["recur" ["conj" "acc" "cursor"] "new-item" ["rest" "items"] "deps-info"]]]]], "analyze/deps-sort" ["defn" "deps-sort" ["acc" "items" "deps-info"] ["if" ["empty?" "items"] "acc" ["let" [["cursor" ["first" "items"]] ["next-acc" ["deps-insert" ["[]"] "cursor" "acc" "deps-info"]]] ["recur" "next-acc" ["into" ["[]"] ["rest" "items"]] "deps-info"]]]], "analyze/strip-atom" ["defn" "strip-atom" ["token"] ["if" ["string/starts-with?" "token" "|@"] ["subs" "token" "1"] "token"]], "core/response" ["defn" "response" ["code" "headers" "body"] ["{}" [":status" "code"] [":headers" "headers"] [":body" "body"]]], "analyze/generate-file" ["defn" "generate-file" ["ns-name" "ns-line" "definitions" "procedure-line"] ["let" [["var-names" ["->>" ["keys" "definitions"] ["map" ["fn" ["var-name"] ["last" ["string/split" "var-name" ["re-pattern" "|/"]]]]] ["into" ["hash-set"]]]] ["deps-info" ["->>" "definitions" ["map" ["fn" ["entry"] ["let" [["path" ["key" "entry"]] ["tree" ["val" "entry"]] ["var-name" ["last" ["string/split" "path" ["re-pattern" "|/"]]]] ["dep-tokens" ["->>" ["subvec" "tree" "2"] ["flatten"] ["distinct"] ["map" "strip-atom"] ["filter" ["fn" ["token"] ["and" ["contains?" "var-names" "token"] ["not=" "token" "var-name"]]]] ["into" ["hash-set"]]]]] ["[]" "var-name" ["{}" [":kind" ["first" "tree"]] [":tokens" "dep-tokens"]]]]]] ["into" ["{}"]]]] ["self-deps-names" ["filter" ["fn" ["x"] ["depends-on?" "x" "x" "deps-info" "0"]] "var-names"]] ["sorted-names" ["deps-sort" ["[]"] ["into" ["[]"] "var-names"] "deps-info"]] ["declarations" ["->>" "self-deps-names" ["map" ["fn" ["var-name"] ["[]" "|declare" "var-name"]]] ["into" ["[]"]]]] ["definition-lines" ["map" ["fn" ["var-name"] ["get" "definitions" ["str" "ns-name" "|/" "var-name"]]] "sorted-names"]] ["tree" ["into" ["[]"] ["concat" ["[]" "ns-line"] "declarations" "definition-lines" "procedure-line"]]] ["code" ["sepal/make-code" "tree"]]] ["--" "println" "|before sort:" "var-names"] ["--" "println" "|after  sort:" "sorted-names"] ["--" "println" "|generated file:" "code"] "code"]], "analyze/def-names" ["def" "def-names" ["#{}" "|def" "|defonce"]], "core/make-result" ["defn" "make-result" ["collection" "fileset" "extname"] ["let" [["file-dict" ["collect-files" "collection"]] ["tmp" ["tmp-dir!"]]] ["doseq" ["[]" "entry" "file-dict"] ["let" [["file-path" ["io/file" "tmp" ["str" ["key" "entry"] ["if" ["some?" "extname"] "extname" "|.cljs"]]]]] ["io/make-parents" "file-path"] ["spit" "file-path" ["val" "entry"]]]] ["->" "fileset" ["add-resource" "tmp"] ["commit!"]]]], "core/respond" ["defn" "respond" ["file-path" "new-content" "next-handler" "fileset" "extname" "sepal-ref" "sepal-data" "request"] ["try" ["let" [["result" ["make-result" "sepal-data" "fileset" "extname"]]] ["--" "println" "|writing file:" "file-path" "new-content"] ["spit" "file-path" "new-content"] ["binding" ["[]" "*warnings*" ["atom" "0"]] ["next-handler" "result"]] ["reset!" "sepal-ref" "sepal-data"] ["{}" [":status" "200"] [":headers" ["merge" ["make-header" "request"]]] [":body" ["pr-str" ["{}" [":status" "|ok"]]]]]] ["catch" "Exception" "e" ["do" [".printStackTrace" "e"] ["println" "|Error Message:" [".getMessage" "e"]] ["response" "406" ["make-header" "request"] ["pr-str" ["{}" [":status" [".getMessage" "e"]]]]]]]]]}, :namespaces {"analyze" ["ns" "stack-server.analyze" [":require" ["[]" "clojure.string" ":as" "string"] ["[]" "cirru.sepal" ":as" "sepal"] ["[]" "clansi" ":refer" ["[]" "style"]]]], "core" ["ns" "stack-server.core" [":require" ["[]" "ring.adapter.jetty" ":refer" ["[]" "run-jetty"]] ["[]" "boot.core" ":refer" ":all"] ["[]" "ring.middleware.cors" ":refer" ["[]" "wrap-cors"]] ["[]" "stack-server.analyze" ":refer" ["[]" "collect-files"]] ["[]" "clojure.java.io" ":as" "io"] ["[]" "shallow-diff.patch" ":refer" ["[]" "patch"]]]]}, :procedures {"analyze" [], "core" [["deftask" "start-stack-editor!" ["[]" "p" "port" "int" "|Port" "e" "extname" "VAL" "str" "|Extname" "f" "filename" "VAL" "str" "|Filename"] ["fn" ["next-handler"] ["fn" ["fileset"] ["let" [["file-path" ["or" "filename" "|stack-sepal.ir"]] ["sepal-ref" ["atom" ["read-string" ["slurp" "file-path"]]]]] ["run-jetty" ["fn" ["request"] ["cond" [["=" [":request-method" "request"] ":get"] ["{}" [":status" "200"] [":headers" ["merge" ["make-header" "request"]]] [":body" ["pr-str" "@sepal-ref"]]]] [["=" [":request-method" "request"] ":post"] ["let" [["raw-sepal" ["slurp" [":body" "request"]]] ["sepal-data" ["read-string" "raw-sepal"]]] ["respond" "file-path" "raw-sepal" "next-handler" "fileset" "extname" "sepal-ref" "sepal-data" "request"]]] [["=" [":request-method" "request"] ":patch"] ["let" [["changes-content" ["slurp" [":body" "request"]]] ["changes" ["read-string" "changes-content"]] ["sepal-data" ["patch" "@sepal-ref" "changes"]] ["raw-sepal" ["pr-str" "sepal-data"]]] ["respond" "file-path" "raw-sepal" "next-handler" "fileset" "extname" "sepal-ref" "sepal-data" "request"]]] [["=" [":request-method" "request"] ":options"] ["response" "200" ["make-header" "request"] "|ok"]] [":else" ["response" "404" ["make-header" "request"] ["pr-str" ["{}" [":status" "|ok"]]]]]]] ["{}" [":port" ["or" "port" "7010"]] [":join?" "false"]]] ["next-handler" ["make-result" "@sepal-ref" "fileset" "extname"]]]]]] ["deftask" "transform-stack" ["[]" "e" "extname" "VAL" "str" "|Extname" "f" "filename" "VAL" "str" "|Filename"] ["fn" ["next-handler"] ["fn" ["fileset"] ["let" [["file-path" ["or" "filename" "|stack-sepal.ir"]] ["stack-sepal" ["read-string" ["slurp" "file-path"]]]] ["next-handler" ["make-result" "stack-sepal" "fileset" "extname"]]]]]]]}, :package "stack-server"}